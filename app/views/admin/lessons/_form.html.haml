=semantic_form_for [:admin, @lesson] do |f|
  =f.inputs :details do
    =f.input :name
    =f.input :teacher, :as => :select, :collection => Chalkler.accessible_by(current_ability).order("LOWER(name) ASC")
    =f.input :categories
    =f.input :start_at
    -if !@lesson.published?
      =f.input :availabilities, :label => "Availability of the teacher"
      =f.input :venue
      =f.input :meetup_id, :label => "Enter the Meetup ID here after you have made a draft on Meetup"
      =f.input :do_during_class, :label => "What we are doing"
      =f.input :learning_outcomes, :label => "What you will learn"
      =f.input :lesson_type, :as => :select, :label => "Type of class", :collection => ["test flight", "intro", "next step", "tips & tricks", "practice", "master class", "zero to hero"]
      =f.input :lesson_skill, :as => :select, :label => "Skills required", :collection => ["Beginner", "Intermediate", "Advanced"]
      =f.input :teacher_bio, :label => "Your chalkler will be"
      =f.input :prerequisites, :label => "What to bring"
      =f.input :additional_comments
    -if @lesson.teacher_cost == 0
      =f.input :cost, :label => "Advertised price excluding GST", :hint => "To edit this, set Teacher Income Per Attendee to 0 and save"
    -else
      =f.input :cost, :label => "Advertised price excluding GST", :input_html => { :readonly => true }, :hint => "To edit this, set Teacher Income Per Attendee to 0 and save"
    =f.input :default_chalkle_percentage, :as => :hidden, :label => "Default % of revenue paid chalkle", :input_html => { :disabled => true, :readonly => true }
    -if current_admin_user.role=="super"
      =f.input :chalkle_percentage_override, :label => "Override default % of revenue paid chalkle", :hint => "Default is #{@lesson.default_chalkle_percentage*100}%"
    =f.input :default_channel_percentage, :as => :hidden, :label => "Default % of revenue paid channel", :input_html => { :disabled => true, :readonly => true,}
    -if current_admin_user.role=="super"
      =f.input :channel_percentage_override, :label => "Override default % of revenue paid channel", :hint => "Default is #{@lesson.default_channel_percentage*100}%"
    -else
      =f.input :channel_percentage_override, :label => "Override default % of revenue paid channel", :hint => "Default channel percentage is #{@lesson.default_channel_percentage*100}%, default chalkle percentage is #{@lesson.default_chalkle_percentage*100}%"
    =f.input :teacher_cost, :label => "Teacher income per attendee"
    =f.input :venue_cost
    =f.input :max_attendee
    =f.input :min_attendee
    =f.input :duration, :label => "Duration in seconds"
    -if @lesson.published?
      =f.input :teacher_payment, :label => "Teacher Payment (leave blank if not paid)"
      =f.input :description
    =f.input :status, :as => :select, :collection =>  ["Published", "On-hold", "Approved", "Unreviewed"]

  =f.inputs "Lesson Image", :for => [:lesson_image, f.object.lesson_image || LessonImage.new ] do |fi|
    -title = (@lesson.lesson_image.try(:title)) ? @lesson.lesson_image.title : @lesson.name
    =fi.input :title, :as => :text, :hint => "Image will be created based on title formatting. Linebreaks will be preserved.",  :input_html => { :rows => 5, :value => title }
  =f.actions

:javascript

  $('#lesson_teacher_cost').keyup(function(e) {
    if ($('#lesson_channel_percentage_override').val()){
      $channel_percentage = parseFloat( $('#lesson_channel_percentage_override').val() ) / 100;
    }
    else{
      $channel_percentage = parseFloat( $('#lesson_default_channel_percentage').val() );
    }

    if ($('#lesson_chalkle_percentage_override').val()){
      $chalkle_percentage = parseFloat( $('#lesson_chalkle_percentage_override').val() ) / 100;
    }
    else{
      $chalkle_percentage = parseFloat( $('#lesson_default_chalkle_percentage').val() );
    }

    if (e.target.value) {
      $('#lesson_cost').val( e.target.value / (1 - $channel_percentage - $chalkle_percentage));   
    }
    else{
      $('#lesson_cost').val('Missing teacher income per attendee'); 
    }
  });

  $('#lesson_channel_percentage_override').keyup(function(e) {
    if (e.target.value){
      $channel_percentage = e.target.value / 100;
    }
    else{
      $channel_percentage = parseFloat( $('#lesson_default_channel_percentage').val() );
    }

    if ($('#lesson_teacher_cost').val()){
      $('#lesson_cost').val( parseFloat($('#lesson_teacher_cost').val()) / (1 - $channel_percentage - $chalkle_percentage));
    }
    else{
      $('#lesson_cost').val('Missing teacher income per attendee'); 
    }
  });

  $('#lesson_chalkle_percentage_override').keyup(function(e) {
    if (e.target.value){
      $chalkle_percentage = parseFloat(e.target.value) / 100
    }
    else{
      $chalkle_percentage = parseFloat( $('#lesson_default_chalkle_percentage').val() );
    }
    if ($('#lesson_teacher_cost').val()){
      $('#lesson_cost').val( parseFloat($('#lesson_teacher_cost').val()) / (1 - $channel_percentage - $chalkle_percentage));
    }
    else{
      $('#lesson_cost').val('Missing teacher income per attendee'); 
    }
  });