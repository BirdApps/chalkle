<markdown>
  <%= 
  
    paid_text = @courses.map(&:paid?).include?(true) ? t("email.booking.confirmation.to_chalkler.paid") : ""
    if @courses.select{|c| c.note_to_attendees}.any? 
      
      note_to_attendees = "Details for attendees: \n\n"

      @courses.map(&:note_to_attendees).compact.each do |note| 
        note_to_attendees.concat "#{note}\n\n"
      end
    else
      note_to_attendees = ''
    end

    t("email.booking.confirmation.to_chalkler.body.html", 
      booking_names: @bookings.map(&:name).uniq.join(', '), 
      courses_links: @courses.map(&:name).uniq.join(', '), 
      course_urls: @courses.map{|c| "[#{c.name}](#{tiny_course_url(c)})" }.uniq.join(','), 
      course_names: @courses.map{|c| c.name }.uniq.join(','), 
      provider_names: @bookings.map{|b| b.provider.name}.uniq.join(', '), 
      provider_urls: @courses.map{|c| "[#{c.provider.name}](#{provider_url(c.provider)})" }.uniq.join(','),
      venue: @courses.map{|c| c.venue }.uniq.join(', '), 
      address: @courses.map{|c| c.address }.uniq.join(', '), 
      note_to_attendees: note_to_attendees, 
      start_at: day_ordinal_month(@courses.map(&:start_at).min, false, true, true), 
      time_range: pretty_time_range(@courses.map(&:start_at).min, @courses.map(&:end_at).min), 
      paid: paid_text
    ).to_html
  %>
</markdown>